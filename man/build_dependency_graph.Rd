% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_analyzer.R
\name{build_dependency_graph}
\alias{build_dependency_graph}
\title{Build dependency graph from script analysis}
\usage{
build_dependency_graph(script_data)
}
\arguments{
\item{script_data}{Named list. Output from \code{\link{analyze_all_scripts}}.
Must contain imports and exports for each script.}
}
\value{
An igraph directed graph object with:
  \itemize{
    \item Vertices representing scripts
    \item Edges representing dependencies (A â†’ B means B needs A's output)
    \item Edge attributes including via_file (the file that creates the dependency)
  }
  Returns NULL if no dependencies are found.
}
\description{
Creates a directed graph (igraph object) representing dependencies between
scripts. An edge from script A to script B means B depends on output from A
(i.e., A exports a file that B imports).
}
\details{
The function compares each script's exports against all other scripts' imports.
A dependency is created when:
\itemize{
  \item File paths match exactly, or
  \item An import path contains an export filename (handles path variations)
}
}
\examples{
\dontrun{
# Build dependency graph
scripts <- find_r_scripts()
analysis <- analyze_all_scripts(scripts)
graph <- build_dependency_graph(analysis)

# Inspect graph
igraph::vcount(graph)  # Number of scripts
igraph::ecount(graph)  # Number of dependencies
}

}
\seealso{
\code{\link{analyze_all_scripts}}, \code{\link{get_execution_order}},
  \code{\link{visualize_workflow}}
}
