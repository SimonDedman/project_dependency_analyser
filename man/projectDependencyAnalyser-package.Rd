% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_analyzer.R
\docType{package}
\name{projectDependencyAnalyser-package}
\alias{projectDependencyAnalyser}
\alias{projectDependencyAnalyser-package}
\title{projectDependencyAnalyser: Automated R Project Workflow Analysis}
\description{
Comprehensive toolkit for analyzing, documenting, and automating R project
workflows. Automatically catalogs file dependencies, determines script
execution order, creates network visualizations, and converts workflows to
the targets package format.
}
\details{
Main capabilities:
\itemize{
  \item Automated file cataloging (15+ import functions, 10+ export functions)
  \item Dependency analysis and execution order determination
  \item Interactive and static network visualizations
  \item Script annotation with roxygen2-style documentation
  \item Workflow reports and I/O catalogs
  \item Targets package conversion
}
}
\section{Quick Start}{

For most users, simply call:
\preformatted{
library(projectDependencyAnalyser)
analyze_project_workflow()  # One function does everything!
}

This automatically finds scripts, analyzes dependencies, creates visualizations,
and generates reports.
}

\section{Main Functions}{

\describe{
  \item{\code{\link{analyze_project_workflow}}}{**RECOMMENDED** - Complete workflow analysis in one call}
  \item{\code{\link{find_r_scripts}}}{Find all R scripts in a project}
  \item{\code{\link{analyze_all_scripts}}}{Batch analyze entire project}
  \item{\code{\link{analyze_imports}}}{Detect files imported by a script}
  \item{\code{\link{analyze_exports}}}{Detect files exported by a script}
  \item{\code{\link{build_dependency_graph}}}{Create dependency network}
  \item{\code{\link{get_execution_order}}}{Determine optimal script order}
  \item{\code{\link{visualize_workflow}}}{Interactive network visualization}
  \item{\code{\link{visualize_graph_static}}}{Static ggplot2 diagram}
  \item{\code{\link{generate_workflow_report}}}{Comprehensive text report}
  \item{\code{\link{annotate_scripts}}}{Add dependency documentation}
  \item{\code{\link{convert_to_targets}}}{Generate targets pipeline}
}
}

\seealso{
Useful links:
\itemize{
  \item \url{https://github.com/SimonDedman/project_dependency_analyser}
  \item Report bugs at \url{https://github.com/SimonDedman/project_dependency_analyser/issues}
}

}
\author{
Simon Dedman \email{simondedman@gmail.com}
}
\keyword{internal}
