% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/workflow_analyzer.R
\name{get_execution_order}
\alias{get_execution_order}
\title{Get optimal script execution order}
\usage{
get_execution_order(graph)
}
\arguments{
\item{graph}{An igraph object from \code{\link{build_dependency_graph}}}
}
\value{
Character vector of script names in execution order (dependencies first).
  Returns empty character(0) if graph is NULL. If a cycle is detected (circular
  dependencies), returns scripts in their original vertex order with a warning.
}
\description{
Determines the order in which scripts should be executed based on their
dependencies using topological sorting. Scripts with no dependencies come first,
followed by scripts that depend on them.
}
\details{
Uses igraph's topological sort algorithm. A topological sort orders vertices
such that for every directed edge from A to B, A comes before B in the ordering.
This ensures scripts run after their dependencies.
}
\examples{
\dontrun{
# Get execution order
scripts <- find_r_scripts()
analysis <- analyze_all_scripts(scripts)
graph <- build_dependency_graph(analysis)
order <- get_execution_order(graph)

# Run scripts in order
for (script in order) {
  cat("Running:", script, "\n")
  source(analysis[[script]]$path)
}
}

}
\seealso{
\code{\link{build_dependency_graph}}
}
